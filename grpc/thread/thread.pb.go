// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v5.26.1
// source: thread/pb/thread.proto

package thread

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MAINSECTION int32

const (
	MAINSECTION_Game  MAINSECTION = 0
	MAINSECTION_Video MAINSECTION = 1
	MAINSECTION_AC    MAINSECTION = 2
)

// Enum value maps for MAINSECTION.
var (
	MAINSECTION_name = map[int32]string{
		0: "Game",
		1: "Video",
		2: "AC",
	}
	MAINSECTION_value = map[string]int32{
		"Game":  0,
		"Video": 1,
		"AC":    2,
	}
)

func (x MAINSECTION) Enum() *MAINSECTION {
	p := new(MAINSECTION)
	*p = x
	return p
}

func (x MAINSECTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MAINSECTION) Descriptor() protoreflect.EnumDescriptor {
	return file_thread_pb_thread_proto_enumTypes[0].Descriptor()
}

func (MAINSECTION) Type() protoreflect.EnumType {
	return &file_thread_pb_thread_proto_enumTypes[0]
}

func (x MAINSECTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MAINSECTION.Descriptor instead.
func (MAINSECTION) EnumDescriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{0}
}

type SUBSECTION int32

const (
	SUBSECTION_Western  SUBSECTION = 0
	SUBSECTION_Japanese SUBSECTION = 1
	SUBSECTION_Movie    SUBSECTION = 2
	SUBSECTION_Domestic SUBSECTION = 3
	SUBSECTION_Anime    SUBSECTION = 4
	SUBSECTION_Comic    SUBSECTION = 5
)

// Enum value maps for SUBSECTION.
var (
	SUBSECTION_name = map[int32]string{
		0: "Western",
		1: "Japanese",
		2: "Movie",
		3: "Domestic",
		4: "Anime",
		5: "Comic",
	}
	SUBSECTION_value = map[string]int32{
		"Western":  0,
		"Japanese": 1,
		"Movie":    2,
		"Domestic": 3,
		"Anime":    4,
		"Comic":    5,
	}
)

func (x SUBSECTION) Enum() *SUBSECTION {
	p := new(SUBSECTION)
	*p = x
	return p
}

func (x SUBSECTION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SUBSECTION) Descriptor() protoreflect.EnumDescriptor {
	return file_thread_pb_thread_proto_enumTypes[1].Descriptor()
}

func (SUBSECTION) Type() protoreflect.EnumType {
	return &file_thread_pb_thread_proto_enumTypes[1]
}

func (x SUBSECTION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SUBSECTION.Descriptor instead.
func (SUBSECTION) EnumDescriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{1}
}

type THREADSTATUS int32

const (
	THREADSTATUS_DRAFT     THREADSTATUS = 0
	THREADSTATUS_PUBLISHED THREADSTATUS = 1
)

// Enum value maps for THREADSTATUS.
var (
	THREADSTATUS_name = map[int32]string{
		0: "DRAFT",
		1: "PUBLISHED",
	}
	THREADSTATUS_value = map[string]int32{
		"DRAFT":     0,
		"PUBLISHED": 1,
	}
)

func (x THREADSTATUS) Enum() *THREADSTATUS {
	p := new(THREADSTATUS)
	*p = x
	return p
}

func (x THREADSTATUS) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (THREADSTATUS) Descriptor() protoreflect.EnumDescriptor {
	return file_thread_pb_thread_proto_enumTypes[2].Descriptor()
}

func (THREADSTATUS) Type() protoreflect.EnumType {
	return &file_thread_pb_thread_proto_enumTypes[2]
}

func (x THREADSTATUS) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use THREADSTATUS.Descriptor instead.
func (THREADSTATUS) EnumDescriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{2}
}

type ReqCreateThreadMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName string `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
}

func (x *ReqCreateThreadMeta) Reset() {
	*x = ReqCreateThreadMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thread_pb_thread_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateThreadMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateThreadMeta) ProtoMessage() {}

func (x *ReqCreateThreadMeta) ProtoReflect() protoreflect.Message {
	mi := &file_thread_pb_thread_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateThreadMeta.ProtoReflect.Descriptor instead.
func (*ReqCreateThreadMeta) Descriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{0}
}

func (x *ReqCreateThreadMeta) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *ReqCreateThreadMeta) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

type ReqCreateThread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title               string               `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	MainSection         MAINSECTION          `protobuf:"varint,2,opt,name=mainSection,proto3,enum=thread.MAINSECTION" json:"mainSection,omitempty"`
	SubSection          SUBSECTION           `protobuf:"varint,3,opt,name=subSection,proto3,enum=thread.SUBSECTION" json:"subSection,omitempty"`
	Text                string               `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"`
	Link                string               `protobuf:"bytes,5,opt,name=link,proto3" json:"link,omitempty"`
	LinkCode            string               `protobuf:"bytes,6,opt,name=linkCode,proto3" json:"linkCode,omitempty"`
	UnzipPassword       string               `protobuf:"bytes,7,opt,name=unzipPassword,proto3" json:"unzipPassword,omitempty"`
	Price               int64                `protobuf:"varint,8,opt,name=price,proto3" json:"price,omitempty"`
	Tags                map[string]string    `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Status              THREADSTATUS         `protobuf:"varint,10,opt,name=status,proto3,enum=thread.THREADSTATUS" json:"status,omitempty"`
	ReqCreateThreadMeta *ReqCreateThreadMeta `protobuf:"bytes,11,opt,name=reqCreateThreadMeta,proto3" json:"reqCreateThreadMeta,omitempty"`
}

func (x *ReqCreateThread) Reset() {
	*x = ReqCreateThread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thread_pb_thread_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReqCreateThread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqCreateThread) ProtoMessage() {}

func (x *ReqCreateThread) ProtoReflect() protoreflect.Message {
	mi := &file_thread_pb_thread_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqCreateThread.ProtoReflect.Descriptor instead.
func (*ReqCreateThread) Descriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{1}
}

func (x *ReqCreateThread) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ReqCreateThread) GetMainSection() MAINSECTION {
	if x != nil {
		return x.MainSection
	}
	return MAINSECTION_Game
}

func (x *ReqCreateThread) GetSubSection() SUBSECTION {
	if x != nil {
		return x.SubSection
	}
	return SUBSECTION_Western
}

func (x *ReqCreateThread) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ReqCreateThread) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ReqCreateThread) GetLinkCode() string {
	if x != nil {
		return x.LinkCode
	}
	return ""
}

func (x *ReqCreateThread) GetUnzipPassword() string {
	if x != nil {
		return x.UnzipPassword
	}
	return ""
}

func (x *ReqCreateThread) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ReqCreateThread) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ReqCreateThread) GetStatus() THREADSTATUS {
	if x != nil {
		return x.Status
	}
	return THREADSTATUS_DRAFT
}

func (x *ReqCreateThread) GetReqCreateThreadMeta() *ReqCreateThreadMeta {
	if x != nil {
		return x.ReqCreateThreadMeta
	}
	return nil
}

type Thread struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ThreadBase *ReqCreateThread `protobuf:"bytes,1,opt,name=threadBase,proto3" json:"threadBase,omitempty"`
	ThreadMeta *ThreadMeta      `protobuf:"bytes,2,opt,name=threadMeta,proto3" json:"threadMeta,omitempty"`
}

func (x *Thread) Reset() {
	*x = Thread{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thread_pb_thread_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Thread) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Thread) ProtoMessage() {}

func (x *Thread) ProtoReflect() protoreflect.Message {
	mi := &file_thread_pb_thread_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Thread.ProtoReflect.Descriptor instead.
func (*Thread) Descriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{2}
}

func (x *Thread) GetThreadBase() *ReqCreateThread {
	if x != nil {
		return x.ThreadBase
	}
	return nil
}

func (x *Thread) GetThreadMeta() *ThreadMeta {
	if x != nil {
		return x.ThreadMeta
	}
	return nil
}

type ThreadMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatedAt   int64 `protobuf:"varint,1,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   int64 `protobuf:"varint,2,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	PublishedAt int64 `protobuf:"varint,3,opt,name=publishedAt,proto3" json:"publishedAt,omitempty"`
}

func (x *ThreadMeta) Reset() {
	*x = ThreadMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_thread_pb_thread_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ThreadMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ThreadMeta) ProtoMessage() {}

func (x *ThreadMeta) ProtoReflect() protoreflect.Message {
	mi := &file_thread_pb_thread_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ThreadMeta.ProtoReflect.Descriptor instead.
func (*ThreadMeta) Descriptor() ([]byte, []int) {
	return file_thread_pb_thread_proto_rawDescGZIP(), []int{3}
}

func (x *ThreadMeta) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ThreadMeta) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ThreadMeta) GetPublishedAt() int64 {
	if x != nil {
		return x.PublishedAt
	}
	return 0
}

var File_thread_pb_thread_proto protoreflect.FileDescriptor

var file_thread_pb_thread_proto_rawDesc = []byte{
	0x0a, 0x16, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2f, 0x70, 0x62, 0x2f, 0x74, 0x68, 0x72, 0x65,
	0x61, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x22, 0x49, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xff, 0x03, 0x0a, 0x0f,
	0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x74, 0x68, 0x72,
	0x65, 0x61, 0x64, 0x2e, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x52,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x0a,
	0x73, 0x75, 0x62, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x53, 0x55, 0x42, 0x53, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x6e, 0x6b,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x6e, 0x7a, 0x69, 0x70, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x6e, 0x7a,
	0x69, 0x70, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x35, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21,
	0x2e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x2e, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x4d, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52,
	0x13, 0x72, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x1a, 0x37, 0x0a, 0x09, 0x54, 0x61, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x75, 0x0a,
	0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x37, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61,
	0x64, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x0a, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64,
	0x4d, 0x65, 0x74, 0x61, 0x22, 0x6a, 0x0a, 0x0a, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74,
	0x2a, 0x2a, 0x0a, 0x0b, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x12,
	0x08, 0x0a, 0x04, 0x47, 0x61, 0x6d, 0x65, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x10, 0x01, 0x12, 0x06, 0x0a, 0x02, 0x41, 0x43, 0x10, 0x02, 0x2a, 0x56, 0x0a, 0x0a,
	0x53, 0x55, 0x42, 0x53, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x65,
	0x73, 0x74, 0x65, 0x72, 0x6e, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4a, 0x61, 0x70, 0x61, 0x6e,
	0x65, 0x73, 0x65, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x6f, 0x76, 0x69, 0x65, 0x10, 0x02,
	0x12, 0x0c, 0x0a, 0x08, 0x44, 0x6f, 0x6d, 0x65, 0x73, 0x74, 0x69, 0x63, 0x10, 0x03, 0x12, 0x09,
	0x0a, 0x05, 0x41, 0x6e, 0x69, 0x6d, 0x65, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6f, 0x6d,
	0x69, 0x63, 0x10, 0x05, 0x2a, 0x28, 0x0a, 0x0c, 0x54, 0x48, 0x52, 0x45, 0x41, 0x44, 0x53, 0x54,
	0x41, 0x54, 0x55, 0x53, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x00, 0x12,
	0x0d, 0x0a, 0x09, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x01, 0x32, 0x44,
	0x0a, 0x09, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x52, 0x70, 0x63, 0x12, 0x37, 0x0a, 0x0c, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68, 0x72, 0x65, 0x61, 0x64, 0x12, 0x17, 0x2e, 0x74, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x2e, 0x52, 0x65, 0x71, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x1a, 0x0e, 0x2e, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x2e, 0x54, 0x68,
	0x72, 0x65, 0x61, 0x64, 0x42, 0x26, 0x5a, 0x24, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x43, 0x6c, 0x61, 0x79, 0x32, 0x39, 0x34, 0x2f, 0x66, 0x6f, 0x72, 0x75, 0x6d,
	0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x74, 0x68, 0x72, 0x65, 0x61, 0x64, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_thread_pb_thread_proto_rawDescOnce sync.Once
	file_thread_pb_thread_proto_rawDescData = file_thread_pb_thread_proto_rawDesc
)

func file_thread_pb_thread_proto_rawDescGZIP() []byte {
	file_thread_pb_thread_proto_rawDescOnce.Do(func() {
		file_thread_pb_thread_proto_rawDescData = protoimpl.X.CompressGZIP(file_thread_pb_thread_proto_rawDescData)
	})
	return file_thread_pb_thread_proto_rawDescData
}

var file_thread_pb_thread_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_thread_pb_thread_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_thread_pb_thread_proto_goTypes = []interface{}{
	(MAINSECTION)(0),            // 0: thread.MAINSECTION
	(SUBSECTION)(0),             // 1: thread.SUBSECTION
	(THREADSTATUS)(0),           // 2: thread.THREADSTATUS
	(*ReqCreateThreadMeta)(nil), // 3: thread.ReqCreateThreadMeta
	(*ReqCreateThread)(nil),     // 4: thread.ReqCreateThread
	(*Thread)(nil),              // 5: thread.Thread
	(*ThreadMeta)(nil),          // 6: thread.ThreadMeta
	nil,                         // 7: thread.ReqCreateThread.TagsEntry
}
var file_thread_pb_thread_proto_depIdxs = []int32{
	0, // 0: thread.ReqCreateThread.mainSection:type_name -> thread.MAINSECTION
	1, // 1: thread.ReqCreateThread.subSection:type_name -> thread.SUBSECTION
	7, // 2: thread.ReqCreateThread.tags:type_name -> thread.ReqCreateThread.TagsEntry
	2, // 3: thread.ReqCreateThread.status:type_name -> thread.THREADSTATUS
	3, // 4: thread.ReqCreateThread.reqCreateThreadMeta:type_name -> thread.ReqCreateThreadMeta
	4, // 5: thread.Thread.threadBase:type_name -> thread.ReqCreateThread
	6, // 6: thread.Thread.threadMeta:type_name -> thread.ThreadMeta
	4, // 7: thread.ThreadRpc.CreateThread:input_type -> thread.ReqCreateThread
	5, // 8: thread.ThreadRpc.CreateThread:output_type -> thread.Thread
	8, // [8:9] is the sub-list for method output_type
	7, // [7:8] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_thread_pb_thread_proto_init() }
func file_thread_pb_thread_proto_init() {
	if File_thread_pb_thread_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_thread_pb_thread_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateThreadMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thread_pb_thread_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReqCreateThread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thread_pb_thread_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Thread); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_thread_pb_thread_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ThreadMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_thread_pb_thread_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_thread_pb_thread_proto_goTypes,
		DependencyIndexes: file_thread_pb_thread_proto_depIdxs,
		EnumInfos:         file_thread_pb_thread_proto_enumTypes,
		MessageInfos:      file_thread_pb_thread_proto_msgTypes,
	}.Build()
	File_thread_pb_thread_proto = out.File
	file_thread_pb_thread_proto_rawDesc = nil
	file_thread_pb_thread_proto_goTypes = nil
	file_thread_pb_thread_proto_depIdxs = nil
}
